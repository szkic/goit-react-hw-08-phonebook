{"version":3,"file":"static/js/527.37d409aa.chunk.js","mappings":"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","sources":["components/ContactForm.jsx","components/ContactModal.jsx","redux/contacts/selectors.js","components/Filter.jsx","components/ContactList.jsx","pages/Phonebook.jsx"],"sourcesContent":["import { Button, TextField } from '@mui/material';\n\nconst styles = {\n  form: ['flex', 'flex-col', 'items-start', 'max-w-sm'].join(' '),\n  label: ['flex', 'flex-col', 'mb-5', 'w-60'].join(' '),\n};\n\nexport const ContactForm = ({ onSubmit }) => {\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(e);\n  };\n\n  return (\n    <div className=\"flex justify-center\">\n      <form onSubmit={handleSubmit} className={styles.form}>\n        <label className={styles.label}>\n          <TextField\n            type=\"text\"\n            size=\"small\"\n            name=\"name\"\n            label=\"Name\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n\n        <label className={styles.label}>\n          <TextField\n            type=\"tel\"\n            size=\"small\"\n            name=\"number\"\n            label=\"Number\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n\n        <Button type=\"submit\" variant=\"contained\">\n          Accept\n        </Button>\n      </form>\n    </div>\n  );\n};\n","import Box from '@mui/material/Box';\nimport Modal from '@mui/material/Modal';\n\nconst styles = [\n  'absolute',\n  'top-1/2',\n  'left-1/2',\n  '-translate-x-1/2',\n  '-translate-y-1/2',\n  'rounded-xl',\n  'bg-slate-50',\n  'p-9',\n  'shadow-lg',\n].join(' ');\n\nexport const ContactModal = ({ open, handleModalClose, children }) => {\n  return (\n    <Modal\n      open={open}\n      onClose={handleModalClose}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <Box className={styles}>{children}</Box>\n    </Modal>\n  );\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectContacts = state => state.contacts.contacts;\nexport const selectFilteredContacts = state => state.filters;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilteredContacts],\n  (contacts, filteredContacts) => {\n    if (filteredContacts === '') {\n      return contacts;\n    } else {\n      return contacts.filter(\n        contact =>\n          contact.name.toLowerCase().includes(filteredContacts.filter) ?? []\n      );\n    }\n  }\n);\n","import { TextField } from '@mui/material';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterContact } from 'redux/contacts/filtersSlice';\n\n// import Box from '@mui/material/Box';\n// import Modal from '@mui/material/Modal';\nimport { ContactForm } from './ContactForm';\nimport Button from '@mui/material/Button';\nimport { useState } from 'react';\nimport { ContactModal } from './ContactModal';\n\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nconst styles = [\n  'flex',\n  'items-center',\n  'justify-evenly',\n  'border-b-2',\n  'border-neutral-400',\n  'p-2',\n  'mb-4',\n].join(' ');\n\nexport const Filter = () => {\n  const [open, setOpen] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleModalOpen = () => setOpen(true);\n  const handleModalClose = () => setOpen(false);\n\n  const handleInputChange = e => dispatch(filterContact(e.target.value));\n\n  const stateContacts = useSelector(selectContacts);\n  const stateContactsNames = stateContacts.map(contact => contact.name);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n\n    const contact = {\n      name,\n      number,\n    };\n\n    if (stateContactsNames.includes(name)) {\n      form.reset();\n      return alert(`${name} is alredy in contacts`);\n    }\n\n    dispatch(addContact(contact));\n    setOpen(false);\n\n    form.reset();\n  };\n\n  return (\n    <div className={styles}>\n      <TextField\n        size=\"small\"\n        label=\"Find contact by name\"\n        onChange={handleInputChange}\n      />\n      <Button onClick={handleModalOpen} variant=\"outlined\">\n        Add contact\n      </Button>\n      <ContactModal open={open} handleModalClose={handleModalClose}>\n        <ContactForm onSubmit={handleSubmit} />\n      </ContactModal>\n      {/* <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box className={styles.modal}>\n          <ContactForm onSubmit={() => setOpen(false)} />\n        </Box>\n      </Modal> */}\n    </div>\n  );\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nimport { deleteContact, editContact } from 'redux/contacts/operations';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { red } from '@mui/material/colors';\nimport {\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  IconButton,\n  Tooltip,\n  TableSortLabel,\n  TablePagination,\n} from '@mui/material';\nimport { useState } from 'react';\nimport { ContactModal } from './ContactModal';\nimport { ContactForm } from './ContactForm';\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) return -1;\n  if (b[orderBy] > a[orderBy]) return 1;\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nconst sortedRowInformation = (rowArray, comparator) => {\n  const stabilizedRowArray = rowArray.map((el, index) => [el, index]);\n  stabilizedRowArray.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n\n  return stabilizedRowArray.map(el => el[0]);\n};\n\nexport const ContactList = () => {\n  const [orderDirection, setOrderDirection] = useState('asc');\n  const [contactId, setContactId] = useState('');\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [open, setOpen] = useState(false);\n  const contacts = useSelector(selectVisibleContacts);\n  const dispatch = useDispatch();\n  const valueToOrderedBy = 'name';\n\n  const handleRequestSort = () => {\n    const isAscending = orderDirection === 'asc';\n    setOrderDirection(isAscending ? 'desc' : 'asc');\n  };\n\n  const createSortHandler = () => event => handleRequestSort();\n\n  const handleChangePage = (event, newPage) => setPage(newPage);\n\n  const handeChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value), 10);\n    setPage(0);\n  };\n\n  const handleModalOpen = e => {\n    setContactId(e.currentTarget.id);\n    setOpen(true);\n  };\n  const handleModalClose = () => setOpen(false);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n\n    const contactData = {\n      name,\n      number,\n      contactId,\n    };\n\n    dispatch(editContact(contactData));\n\n    form.reset();\n  };\n\n  return (\n    <>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell sx={{ fontWeight: 900, width: '40%' }} key=\"name\">\n              <TableSortLabel\n                active={valueToOrderedBy === 'name'}\n                direction={'name' ? orderDirection : 'asc'}\n                onClick={createSortHandler()}\n              >\n                Name\n              </TableSortLabel>\n            </TableCell>\n            <TableCell sx={{ fontWeight: 900 }} key={'number'}>\n              Phone number\n            </TableCell>\n            <TableCell align=\"right\" sx={{ fontWeight: 900 }}>\n              Actions\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {sortedRowInformation(\n            contacts,\n            getComparator(orderDirection, valueToOrderedBy)\n          )\n            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n            .map(contact => (\n              <TableRow key={contact.id}>\n                <TableCell>{contact.name}</TableCell>\n                <TableCell>{contact.number}</TableCell>\n                <TableCell align=\"right\">\n                  <Tooltip title=\"Edit\">\n                    <IconButton\n                      aria-label=\"edit\"\n                      id={contact.id}\n                      onClick={handleModalOpen}\n                    >\n                      <EditIcon />\n                    </IconButton>\n                  </Tooltip>\n                  <Tooltip title=\"Delete\">\n                    <IconButton\n                      aria-label=\"delete\"\n                      sx={{ color: red[500] }}\n                      onClick={() => dispatch(deleteContact(contact.id))}\n                    >\n                      <DeleteIcon fontSize=\"small\" />\n                    </IconButton>\n                  </Tooltip>\n                </TableCell>\n              </TableRow>\n            ))}\n        </TableBody>\n      </Table>\n      <TablePagination\n        rowsPerPageOptions={[5, 10]}\n        component=\"div\"\n        count={contacts.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handeChangeRowsPerPage}\n      />\n      <ContactModal open={open} handleModalClose={handleModalClose}>\n        <ContactForm onSubmit={handleSubmit} />\n      </ContactModal>\n    </>\n  );\n};\n","import { Filter } from '../components/Filter';\nimport { ContactList } from '../components/ContactList';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\nimport { useSelector } from 'react-redux';\n\nconst styles = {\n  phonebookContainer: ['pt-10'].join(' '),\n  phonebook: ['text-5xl', 'pb-14', 'text-center'].join(' '),\n  contacts: ['text-3xl', 'pb-4', 'pt-10', 'text-center'].join(' '),\n};\n\nconst Phonebook = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  return (\n    <div className={styles.phonebookContainer}>\n      <h1 className={styles.phonebook}>Phonebook</h1>\n\n      <Filter />\n      {isLoading ? <p>Loading contacts...</p> : <ContactList />}\n      {error && <p>Data loading error</p>}\n    </div>\n  );\n};\n\nexport default Phonebook;\n"],"names":["styles","form","join","label","ContactForm","onSubmit","className","e","preventDefault","TextField","type","size","name","title","required","Button","variant","ContactModal","open","handleModalClose","children","Modal","onClose","Box","selectIsLoading","state","contacts","isLoading","selectError","error","selectContacts","selectVisibleContacts","createSelector","filters","filteredContacts","filter","contact","toLowerCase","includes","Filter","useState","setOpen","dispatch","useDispatch","stateContactsNames","useSelector","map","onChange","filterContact","target","value","onClick","elements","number","reset","alert","addContact","descendingComparator","a","b","orderBy","sortedRowInformation","rowArray","comparator","stabilizedRowArray","el","index","sort","order","ContactList","orderDirection","setOrderDirection","contactId","setContactId","page","setPage","rowsPerPage","setRowsPerPage","valueToOrderedBy","handleModalOpen","currentTarget","id","Table","TableHead","TableRow","TableCell","sx","fontWeight","width","TableSortLabel","active","direction","event","align","TableBody","slice","Tooltip","IconButton","Edit","color","red","deleteContact","Delete","fontSize","TablePagination","rowsPerPageOptions","component","count","length","onPageChange","newPage","onRowsPerPageChange","parseInt","contactData","editContact","phonebookContainer","phonebook"],"sourceRoot":""}